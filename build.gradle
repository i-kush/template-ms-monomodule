plugins {
    id "java"
    id "org.springframework.boot" version "3.3.2"
    id "io.spring.dependency-management" version "1.1.6"
}

group = "com.kush"
version = "0.0.1-SNAPSHOT"
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.flywaydb:flyway-core:10.1.0"
    implementation "org.postgresql:postgresql:42.3.8"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:junit-jupiter:1.16.2"
    testImplementation "org.testcontainers:postgresql:1.16.2"
}

test {
    useJUnitPlatform()
}

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    useJUnitPlatform()

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

rootProject.tasks.named("processIntegrationResources") {
    duplicatesStrategy = "include"
}

if (System.properties["test.profile"] == "integration") {
    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
}